// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestEntityFramework.Database.Context;

namespace TestEntityFramework.Migrations
{
    [DbContext(typeof(TestEntityframeworkContext))]
    [Migration("20220901042358_AddTeacherTable")]
    partial class AddTeacherTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Book", b =>
                {
                    b.Property<Guid>("BookGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookCode")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookGUID");

                    b.ToTable("Book","dbo");
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Home", b =>
                {
                    b.Property<Guid>("HomeGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HomeGUID");

                    b.HasIndex("StudentGUID")
                        .IsUnique();

                    b.ToTable("Home","dbo");
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Student", b =>
                {
                    b.Property<Guid>("StudentGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentGUID");

                    b.ToTable("Student","dbo");
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.StudentTeacher", b =>
                {
                    b.Property<Guid>("StudentGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentGUID", "TeacherGUID");

                    b.HasIndex("TeacherGUID");

                    b.ToTable("StudentTeacher","dbo");
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Teacher", b =>
                {
                    b.Property<Guid>("TeacherGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherGUID");

                    b.ToTable("Teacher","dbo");
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Book", b =>
                {
                    b.HasOne("TestEntityFramework.Database.Entity.Student", "Student")
                        .WithMany("Books")
                        .HasForeignKey("BookGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.Home", b =>
                {
                    b.HasOne("TestEntityFramework.Database.Entity.Student", "Student")
                        .WithOne("Home")
                        .HasForeignKey("TestEntityFramework.Database.Entity.Home", "StudentGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestEntityFramework.Database.Entity.StudentTeacher", b =>
                {
                    b.HasOne("TestEntityFramework.Database.Entity.Student", "Student")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("StudentGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestEntityFramework.Database.Entity.Teacher", "Teacher")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("TeacherGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
